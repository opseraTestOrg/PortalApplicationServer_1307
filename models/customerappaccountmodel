var mongoose = require('mongoose');
var Schema = mongoose.Schema;
var bcrypt = require('bcrypt');

var customerToolsSchema = new Schema({
    toolCategory: {type: String },
    toolName: {type: String }
},{ _id : false });

var userToolSchema = new Schema({
    userToolName: {type: String },
    userToolAccountStatus: {type: String }
},{ _id : false });

var customerUsersSchema = new Schema({
    firstName: {type: String },
    lastName: {type: String },
    emailId: {type: String }, 
    loginId: {type: String, required: false},
    loginPassword: {type: String, required: false},
    permissionType: {type: String },
    toolsToBeConfigured: [userToolSchema]
},{ _id : false });

var customerSchema = new Schema({
    uniqueAppId: {type: String },
    bundleType: {type: String },
    organizationName: {type: String },
    address: {type: String },   
    zip: {type: String },
    state: {type: String } ,
    primaryContactEmail: {type: String },    
    primaryContactPhone: {type: String },
    secondaryContactEmail: {type: String },    
    secondaryContactPhone: {type: String },
    applicationUrl: {type: String },
    applicationPortNo: {type: String },
    applicationTechnologyStack:  [{type: String }],
    toolsSelection: [customerToolsSchema],
    customerUsers: [customerUsersSchema]
});

customerSchema.methods.generateHash = function(password){
     return bcrypt.hashSync(password, bcrypt.genSaltSync(8), null);
}

customerSchema.methods.validatePassword = function(password){
    return bcrypt.compareSync(password, this.customerUsers[0].loginPassword);
}

customerSchema.methods.toJSON = function() {
    var obj = this.toObject()
    delete obj.customerUsers[0];
    return obj
};

module.exports = mongoose.model('customerappaccountcollection', customerSchema);